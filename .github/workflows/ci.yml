name: CI

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        clang-version:
          - 15
    steps:
      # Setup
      - name: Install clang-${{ matrix.clang-version }}
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.clang-version }}
      - name: Set clang-${{ matrix.clang-version }} as default
        run: |
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${{ matrix.clang-version }} 999
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${{ matrix.clang-version }} 999
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-${{ matrix.clang-version }} 999
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-${{ matrix.clang-version }} 999
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-${{ matrix.clang-version }} 999
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-${{ matrix.clang-version }} 999
          sudo update-alternatives --install /usr/bin/lld lld /usr/bin/lld-${{ matrix.clang-version }} 999
      - name: Install CMake/Ninja/PulseAudio
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \

      # Checkout
      - uses: actions/checkout@v3
        with:
          lfs: true

      # Code formatting
      - name: clang-format
        run: clang-format --dry-run --Werror --style=file $(find include/ -name '*.hpp') $(find src/ -name '*.cpp')

      - name: Install CUDA Toolkit (x86_64)
        uses: Jimver/cuda-toolkit@v0.2.11
        id: cuda-toolkit
        with:
          cuda: "10.2.89"
          linux-local-args: '["--toolkit", "--override"]'

      - name: "Symlink to CUDA"
        run: |
          mkdir -p ./nvidia
          ln -s /usr/local/cuda-10.2 ./nvidia/cuda-10.2_amd64
          ls -lh ./nvidia/cuda-10.2_amd64

      # Build
      - name: Build for host (x86_64)
        run: |
          cmake --version
          make

      # Lint
      - name: clang-tidy
        run: clang-tidy -p build/host --config-file=.clang-tidy --use-color $(find src/ -name '*.cpp')

      # Test
      - name: Run tests
        run: ctest --preset host-cpu
